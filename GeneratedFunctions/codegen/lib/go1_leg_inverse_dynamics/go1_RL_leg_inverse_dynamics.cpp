//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
//
// go1_RL_leg_inverse_dynamics.cpp
//
// Code generation for function 'go1_RL_leg_inverse_dynamics'
//

// Include files
#include "go1_RL_leg_inverse_dynamics.h"
#include <cmath>

// Function Definitions
void go1_RL_leg_inverse_dynamics(const double in1[3], const double in2[3],
                                 const double in3[3], double taulist[3])
{
  double b_t185_tmp;
  double b_t196_tmp;
  double b_t327_tmp;
  double t100_tmp;
  double t104;
  double t11;
  double t113;
  double t115;
  double t116;
  double t116_tmp;
  double t123;
  double t13;
  double t138;
  double t139;
  double t14;
  double t150;
  double t152;
  double t16;
  double t163_tmp;
  double t169;
  double t17;
  double t170;
  double t172_tmp;
  double t177;
  double t182;
  double t185;
  double t185_tmp;
  double t188_tmp;
  double t189;
  double t190;
  double t191;
  double t196;
  double t196_tmp;
  double t198;
  double t198_tmp;
  double t20;
  double t201;
  double t204;
  double t217;
  double t22;
  double t221_tmp;
  double t225;
  double t226;
  double t228;
  double t23;
  double t231;
  double t234;
  double t24;
  double t240;
  double t241;
  double t243;
  double t25;
  double t263;
  double t263_tmp;
  double t270;
  double t272_tmp;
  double t277;
  double t27_tmp;
  double t280;
  double t281;
  double t287;
  double t291;
  double t291_tmp;
  double t293;
  double t297;
  double t298;
  double t300;
  double t303;
  double t304;
  double t307;
  double t308;
  double t31;
  double t312;
  double t313;
  double t314_tmp;
  double t32;
  double t326;
  double t327_tmp;
  double t36;
  double t37;
  double t42;
  double t43;
  double t44;
  double t49;
  double t5;
  double t50;
  double t51;
  double t51_tmp;
  double t54;
  double t59;
  double t6;
  double t65;
  double t7;
  double t76;
  double t8;
  double t86;
  double t86_tmp;
  double t90;
  double t90_tmp;
  // go1_RL_leg_inverse_dynamics
  //     TAULIST = go1_RL_leg_inverse_dynamics(IN1,IN2,IN3)
  //     This function was generated by the Symbolic Math Toolbox version 9.2.
  //     29-Jun-2023 11:43:37
  t5 = std::abs(in1[0]);
  t6 = std::abs(in1[1]);
  t7 = std::abs(in1[2]);
  t8 = in2[1] + in2[2];
  t16 = in1[1] * in1[1];
  t17 = in1[2] * in1[2];
  t65 = in2[1] * 0.003342;
  t76 = in2[2] * 2.55679E-7;
  t150 = in2[2] * 0.01585441609;
  t152 = in2[2] * 0.000841936814;
  t11 = std::cos(t7);
  t13 = std::sin(t6);
  t14 = std::sin(t7);
  t20 = 1.0 / t5;
  t22 = 1.0 / t6;
  t24 = 1.0 / t7;
  t23 = t22 * t22;
  t25 = t24 * t24;
  t27_tmp = std::cos(t6) - 1.0;
  t31 = in3[0] * in1[1] * t13 * t22;
  t287 = in2[0] * in2[1];
  t32 = t287 * in1[1] * t13 * t22;
  t86 = in2[0] * in1[1];
  t44 = t86 * in1[2] * t13 * t14 * t22 * t24;
  t90_tmp = t86 * t13 * t22;
  t90 = t90_tmp * 0.033451;
  t100_tmp = in1[0] * std::sin(t5) * t20;
  t36 = t16 * t23 * t27_tmp;
  t37 = t17 * t25 * (t11 - 1.0);
  t113 = t44 * 0.019462;
  t182 = in2[1] * 0.033451 + t90_tmp * 0.063146;
  t189 = in2[1] * 0.03077492 + t90_tmp * 0.058094319999999991;
  t86_tmp = in1[0] * in1[0] * (t20 * t20) * (std::cos(t5) - 1.0);
  t86 = (-(in3[0] * 0.008752) + t86_tmp * 9.81) + 9.81;
  t5 = t36 * 0.07189799999999999;
  t104 = t37 * 0.019462;
  t198_tmp = in1[2] * t14 * t24;
  t198 = t198_tmp * t182;
  t42 = in3[0] * (t36 + 1.0);
  t43 = t287 * (t36 + 1.0);
  t49 = t90_tmp * (t37 + 1.0);
  t50 = in2[0] * in1[2] * t14 * t24 * (t36 + 1.0);
  t51_tmp = in2[0] * (t36 + 1.0);
  t51 = t51_tmp * 0.008752;
  t59 = t51_tmp * (t37 + 1.0);
  t115 = t51_tmp * 0.003342;
  t116_tmp = in1[1] * t13 * t22;
  t116 = t116_tmp * t86;
  t139 = (t36 + 1.0) * t86;
  t169 = t37 * 0.019462 + 0.019462;
  t204 = (t37 + 1.0) * t182;
  t54 = t31 + t43;
  t123 = t49 + t50;
  t138 = t50 * 0.019462;
  t170 = in3[0] * (t5 + 0.07189799999999999);
  t20 = in2[0] * (t5 + 0.07189799999999999);
  t185_tmp = t32 - t42;
  b_t185_tmp = (t37 + 1.0) * t185_tmp;
  t185 = b_t185_tmp * 2.55679E-7;
  t190 = t90_tmp * (t104 + 0.019462);
  t196_tmp = t44 - t59;
  b_t196_tmp = in2[2] * t196_tmp;
  t196 = b_t196_tmp * -2.077264E-6;
  t201 = t51_tmp * (t104 + 0.019462);
  t225 = (in2[1] * 0.004485671726 + t90_tmp * 0.000572001265) +
         t51_tmp * 5.7496807E-5;
  t228 = (in2[1] * 5.7496807E-5 - t90_tmp * 0.000218457134) +
         t51_tmp * 0.004431760472;
  t163_tmp = t198_tmp * t54;
  t172_tmp = (t37 + 1.0) * t54;
  t177 = t172_tmp * 2.077264E-6;
  t188_tmp = in2[2] * t123;
  t191 = t76 * t123;
  t221_tmp = in2[1] * (t90 + t115);
  t226 = (in2[1] * 0.000572001265 + t90_tmp * 0.000740309489) -
         t51_tmp * 0.000218457134;
  t231 = (-t51 + t65) + t20;
  t240 = ((in3[1] * 0.003342 - t32 * 0.063146) + t139) + t170;
  t287 = t17 * t24 * (t11 - 1.0);
  t5 = in1[2] * (t7 + -t17 * t25 * (t7 - t14));
  t241 = ((-(t198_tmp * 0.009539) + t37 * 0.296244) +
          -t24 * (t287 * 0.116695 - t5 * 0.006197)) +
         0.296244;
  t25 = ((((in2[1] * 2.077264E-6 + in2[2] * 2.077264E-6) - t44 * 7.117814E-6) +
          t49 * 2.4787446E-5) +
         t50 * 2.4787446E-5) +
        t59 * 7.117814E-6;
  t86 = t198_tmp * t231;
  t234 = (-(t51_tmp * 0.00805184) + in2[1] * 0.00307464) + t20 * 0.92;
  t14 = (t37 + 1.0) * t231;
  t11 = in2[1] * t241;
  t17 = t16 * t22 * t27_tmp;
  t7 = in1[1] * (t6 + -t16 * t23 * (t6 - t13));
  t270 = ((((in2[1] * 0.001100428748 + in2[2] * 0.001100428748) +
            t44 * 2.55679E-7) +
           t49 * 2.077264E-6) +
          t50 * 2.077264E-6) -
         t59 * 2.55679E-7;
  t272_tmp = ((((in2[1] * 2.55679E-7 + t76) + t44 * 0.001088793059) -
               t49 * 7.117814E-6) -
              t50 * 7.117814E-6) -
             t59 * 0.001088793059;
  t280 = t25 * t196_tmp;
  t217 = in2[1] * (t51 - t20);
  t243 = ((t198_tmp * 0.296244 + t37 * 0.009539) -
          t24 * (t287 * 0.006197 + t5 * 0.116695)) +
         0.009539;
  t263_tmp = in2[2] * (((t44 * 0.006197 + t49 * 0.116695) + t50 * 0.116695) -
                       t59 * 0.006197);
  t263 = t263_tmp * 0.135862;
  t277 = -(t123 * t272_tmp);
  t297 = ((((in2[2] * 0.116695 + t138) + t190) + t204) + t86) + t11;
  t298 = ((((-(in2[1] * 0.116695) + t138) + t190) + t204) + t86) + t11;
  t20 = in2[1] * t243;
  t303 =
      ((((t150 + t50 * 0.002644146244) + t190 * 0.135862) + t204 * 0.135862) +
       t86 * 0.135862) +
      t11 * 0.135862;
  t86 = ((in3[1] * 0.033451 + t31 * 0.07189799999999999) + t116) - t217;
  t281 = t198_tmp * t243 + (t37 + 1.0) * t241;
  t11 = ((((in2[2] * 0.006197 + t113) + t198) - t201) - t14) + t20;
  t304 = t8 * t303;
  t308 = t123 * t303;
  t287 = t51_tmp * t281;
  t291_tmp = t116_tmp * (((-(t116_tmp * 0.033349) + t36 * 0.008999) +
                          -t22 * (t17 * 0.003342 - t7 * 0.033451)) +
                         0.008999) -
             (t36 + 1.0) * (((t116_tmp * 0.008999 + t36 * 0.033349) -
                             t22 * (t17 * 0.033451 + t7 * 0.003342)) +
                            0.033349);
  t291 = in2[0] * 0.000102 + -in2[0] * t291_tmp;
  t5 = in2[0] * t291_tmp;
  t293 = in2[0] * 9.384E-5 + t5 * -0.92;
  t300 = ((((in2[1] * 0.006197 - t113) - t198) + t201) + t14) - t20;
  t20 = ((((t152 + t44 * 0.002644146244) + t198 * 0.135862) - t201 * 0.135862) -
         t14 * 0.135862) +
        t20 * 0.135862;
  t313 = t11 * t303;
  t307 = t8 * t20;
  t314_tmp = t198_tmp * t241 - (t37 + 1.0) * t243;
  t49 = (-in2[0] * in1[1] * t13 * t22 * t314_tmp + t287) + t291;
  t312 = -(t297 * t20);
  t5 = ((in2[0] * 1.3857924E-5 + t5 * -0.135862) +
        t90_tmp * t314_tmp * -0.135862) +
       t287 * 0.135862;
  t201 = t123 * t5;
  t198 = t5 * t196_tmp;
  t113 = in3[1] * t243;
  t44 = (t37 + 1.0) * t240;
  t13 = t169 * t185_tmp;
  t22 = t198_tmp * t86;
  t326 = (((((((in3[2] * 0.000841936814 + t163_tmp * 0.002644146244) +
               t13 * 0.135862) +
              t113 * 0.135862) -
             t44 * 0.135862) +
            t22 * 0.135862) +
           in2[2] * t298 * 0.135862) -
          t304) +
         t198;
  t327_tmp = t198_tmp * t185_tmp;
  b_t327_tmp = in3[1] * t241;
  t50 = t54 * t169;
  t204 = (t37 + 1.0) * t86;
  t59 = t198_tmp * t240;
  t24 = (((((((in3[2] * 0.01585441609 + t327_tmp * -0.002644146244) +
              t50 * 0.135862) +
             b_t327_tmp * 0.135862) +
            t59 * 0.135862) +
           t204 * 0.135862) +
          in2[2] * t300 * 0.135862) +
         t307) +
        t201;
  t138 = t198_tmp * t24;
  t190 = (t37 + 1.0) * t326;
  t23 = ((((((((((in3[1] * 2.55679E-7 + in3[2] * 2.55679E-7) +
                 t163_tmp * 0.001088793059) +
                t327_tmp * 7.117814E-6) -
               t172_tmp * 7.117814E-6) +
              b_t185_tmp * 0.001088793059) +
             t188_tmp * 0.001088793059) +
            b_t196_tmp * 7.117814E-6) -
           t8 * t25) +
          t123 * t270) -
         t11 * t5) +
        t20 * t49;
  t51 = ((((((in3[1] * 0.00307464 - t32 * 0.058094319999999991) + t139 * 0.92) +
            t170 * 0.92) +
           in2[1] * t189) +
          t51_tmp * t293) +
         t138) -
        t190;
  t76 = in3[0] * t291_tmp;
  t16 = t281 * t185_tmp;
  t6 = t20 * t196_tmp;
  t7 = t54 * t314_tmp;
  t17 = t16 * 0.135862;
  t14 = t7 * 0.135862;
  t25 = t51_tmp * t234;
  t27_tmp = (((((((-(t100_tmp * 1.33280622) - in3[0] * 1.3857924E-5) +
                  t221_tmp * 0.135862) +
                 t263) +
                t308) +
               t76 * 0.135862) +
              t17) +
             t6) +
            t14;
  t5 = ((((((((((-(in3[1] * 2.077264E-6) - in3[2] * 2.077264E-6) +
                t163_tmp * 7.117814E-6) -
               t172_tmp * 2.4787446E-5) +
              t188_tmp * 7.117814E-6) -
             t8 * t272_tmp) +
            t297 * t5) -
           t303 * t49) +
          b_t196_tmp * 2.4787446E-5) +
         b_t185_tmp * 7.117814E-6) +
        t270 * t196_tmp) +
       t327_tmp * 2.4787446E-5;
  t20 = t198_tmp * t326;
  t287 = t90_tmp * t189;
  t86 = in2[1] * t234;
  t11 = (t37 + 1.0) * t24;
  taulist[0] =
      (((((((in3[0] * 0.000379294663816248 - t308 * 0.000102) -
            (t36 + 1.0) *
                ((((((in3[1] * -5.7496807E-5 + t31 * 0.000218457134) +
                     t32 * 0.004431760472) -
                    t42 * 0.004431760472) +
                   t43 * 0.000218457134) +
                  (((((t138 * -0.019462 - in2[1] * t226) + t281 * t27_tmp) +
                     (t37 + 1.0) * t23) +
                    (t104 + 0.019462) * t326) +
                   t231 * t293)) +
                 ((-t234 * t291 + t198_tmp * t5) + t90_tmp * t225))) +
           (((t221_tmp * -0.000107697924 - t263_tmp * 1.3857924E-5) -
             (t36 + 1.0) * t51 * 0.008752) +
            (t36 * 0.07189799999999999 + 0.07189799999999999) * t51)) +
          (t76 * -0.000107697924 - t16 * 1.3857924E-5)) +
         (((t6 * -0.000102 - t7 * 1.3857924E-5) +
           t291_tmp * (((((in3[0] * -0.000107697924 + t263) + t308) +
                         t221_tmp * 1.055862) +
                        t76 * 1.055862) +
                       (((((t17 + t6) + t14) + t25) - t100_tmp * 10.35800622) +
                        t287))) -
          t25 * 0.000102)) +
        (t100_tmp * 0.00164788305444 - t86_tmp * 0.05074155792)) +
       (t116_tmp *
            (((((((in3[1] * 0.03077492 + t31 * 0.06614616) + t116 * 0.92) -
                 t217 * 0.92) -
                t86) +
               t11) +
              t20) +
             t90_tmp * t293) *
            0.063146 +
        t116_tmp *
            ((((((((in3[1] * 0.000572001265 + t31 * 0.000740309489) +
                   t32 * 0.000218457134) -
                  t42 * 0.000218457134) +
                 t43 * 0.000740309489) -
                in2[1] * t228) +
               (((-t182 * t293 + t189 * t291) + (t104 + 0.019462) * t24) +
                t314_tmp * t27_tmp)) +
              (-(t37 + 1.0) * t5 + t51_tmp * t225)) +
             (t20 * 0.019462 + t198_tmp * t23)))) +
      (t287 * -0.000102 - 0.05074155792);
  taulist[1] =
      (((((in3[1] * 0.0066258277698 + in3[2] * 0.001100428748) +
          t31 * 0.00278465646316) +
         (((t32 * -0.00025164802444 + t42 * 5.7496807E-5) +
           t43 * 0.000572001265) +
          t116 * 0.03077492)) +
        (((((((((((t139 * 0.00307464 + t170 * 0.00307464) + t177) + t185) +
                t191) +
               t196) -
              t217 * 0.03077492) +
             t277) +
            t280) +
           t312) +
          t313) +
         t138 * 0.003342)) +
       (((((((((((t190 * -0.003342 - t86 * 0.033451) + t65 * t189) +
                t11 * 0.033451) +
               t90 * t293) +
              t115 * t293) +
             t182 * t234) -
            t189 * t231) +
           t241 * t24) +
          t243 * t326) -
         t51_tmp * t226) +
        t163_tmp * 2.55679E-7)) +
      ((t20 * 0.033451 - t327_tmp * 2.077264E-6) + t90_tmp * t228);
  taulist[2] =
      (((((((((((((in3[1] * 0.001100428748 + in3[2] * 0.0029557773160589071) +
                  t177) +
                 t185) +
                t191) +
               t196) +
              t277) +
             t280) -
            t304 * 0.006197) +
           (((((t307 * 0.116695 + t312) + t313) + t201 * 0.116695) +
             t198 * 0.006197) +
            b_t327_tmp * 0.01585441609)) +
          (t113 * 0.000841936814 + t50 * 0.01585441609)) +
         (((t44 * -0.000841936814 + t204 * 0.01585441609) + t150 * t300) +
          t152 * t298)) +
        (t13 * 0.000841936814 + t163_tmp * 1.6641453274068E-5)) +
       (t59 * 0.01585441609 + t22 * 0.000841936814)) +
      t327_tmp * -0.00031063590994357987;
}

// End of code generation (go1_RL_leg_inverse_dynamics.cpp)
