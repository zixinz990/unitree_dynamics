//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
//
// go1_RL_leg_inverse_dynamics_hip_zero.cpp
//
// Code generation for function 'go1_RL_leg_inverse_dynamics_hip_zero'
//

// Include files
#include "go1_RL_leg_inverse_dynamics_hip_zero.h"

#include <cmath>

// Function Definitions
void go1_RL_leg_inverse_dynamics_hip_zero() {
    taulist.setZero();
    double b_t177_tmp;
    double b_t188_tmp;
    double b_t319_tmp;
    double t10;
    double t108;
    double t11;
    double t110;
    double t117;
    double t12;
    double t132;
    double t142;
    double t144;
    double t15;
    double t155_tmp;
    double t16;
    double t161;
    double t162;
    double t164_tmp;
    double t169;
    double t17;
    double t174;
    double t177;
    double t177_tmp;
    double t18;
    double t180_tmp;
    double t181;
    double t182;
    double t183;
    double t188;
    double t188_tmp;
    double t190;
    double t190_tmp;
    double t193;
    double t196;
    double t19_tmp;
    double t209;
    double t213_tmp;
    double t217;
    double t218;
    double t220;
    double t223;
    double t226;
    double t23;
    double t234;
    double t236;
    double t24;
    double t25;
    double t258;
    double t258_tmp;
    double t262;
    double t263;
    double t264_tmp;
    double t269;
    double t27;
    double t272;
    double t273;
    double t28;
    double t283;
    double t283_tmp;
    double t285;
    double t289;
    double t290;
    double t292;
    double t295;
    double t296;
    double t299;
    double t300;
    double t304;
    double t305;
    double t306_tmp;
    double t307;
    double t318;
    double t318_tmp;
    double t319_tmp;
    double t33;
    double t34;
    double t35;
    double t4;
    double t40;
    double t41;
    double t42;
    double t42_tmp;
    double t45;
    double t45_tmp;
    double t46;
    double t5;
    double t52;
    double t58;
    double t6;
    double t69;
    double t71;
    double t8;
    double t85;
    double t85_tmp;
    double t9;
    double t94;
    double t99;
    // go1_RL_leg_inverse_dynamics_hip_zero
    //     TAULIST = go1_RL_leg_inverse_dynamics_hip_zero(IN1,IN2,IN3)
    //     This function was generated by the Symbolic Math Toolbox version 9.2.
    //     29-Jun-2023 13:51:12
    t4 = std::abs(q[1]);
    t5 = std::abs(q[2]);
    t6 = dq[1] + dq[2];
    t11 = q[1] * q[1];
    t12 = q[2] * q[2];
    t25 = ddq[0] * 0.008752;
    t58 = dq[1] * 0.003342;
    t69 = dq[2] * 2.55679E-7;
    t142 = dq[2] * 0.01585441609;
    t144 = dq[2] * 0.000841936814;
    t8 = std::cos(t5);
    t9 = std::sin(t4);
    t10 = std::sin(t5);
    t15 = 1.0 / t4;
    t17 = 1.0 / t5;
    t16 = t15 * t15;
    t18 = t17 * t17;
    t19_tmp = std::cos(t4) - 1.0;
    t23 = ddq[0] * q[1] * t9 * t15;
    t307 = dq[0] * dq[1];
    t24 = t307 * q[1] * t9 * t15;
    t94 = dq[0] * q[1];
    t35 = t94 * q[2] * t9 * t10 * t15 * t17;
    t45_tmp = q[1] * t9 * t15;
    t45 = t45_tmp * (t25 - 9.81);
    t85_tmp = t94 * t9 * t15;
    t85 = t85_tmp * 0.033451;
    t27 = t11 * t16 * t19_tmp;
    t28 = t12 * t18 * (t8 - 1.0);
    t108 = t35 * 0.019462;
    t174 = dq[1] * 0.033451 + t85_tmp * 0.063146;
    t181 = dq[1] * 0.03077492 + t85_tmp * 0.058094319999999991;
    t94 = t27 * 0.07189799999999999;
    t99 = t28 * 0.019462;
    t190_tmp = q[2] * t10 * t17;
    t190 = t190_tmp * t174;
    t33 = ddq[0] * (t27 + 1.0);
    t34 = t307 * (t27 + 1.0);
    t40 = t85_tmp * (t28 + 1.0);
    t41 = dq[0] * q[2] * t10 * t17 * (t27 + 1.0);
    t42_tmp = dq[0] * (t27 + 1.0);
    t42 = t42_tmp * 0.008752;
    t52 = t42_tmp * (t28 + 1.0);
    t71 = (t27 + 1.0) * (t25 - 9.81);
    t110 = t42_tmp * 0.003342;
    t161 = t28 * 0.019462 + 0.019462;
    t196 = (t28 + 1.0) * t174;
    t46 = t23 + t34;
    t117 = t40 + t41;
    t132 = t41 * 0.019462;
    t162 = ddq[0] * (t94 + 0.07189799999999999);
    t25 = dq[0] * (t94 + 0.07189799999999999);
    t177_tmp = t24 - t33;
    b_t177_tmp = (t28 + 1.0) * t177_tmp;
    t177 = b_t177_tmp * 2.55679E-7;
    t182 = t85_tmp * (t99 + 0.019462);
    t188_tmp = t35 - t52;
    b_t188_tmp = dq[2] * t188_tmp;
    t188 = b_t188_tmp * -2.077264E-6;
    t193 = t42_tmp * (t99 + 0.019462);
    t217 = (dq[1] * 0.004485671726 + t85_tmp * 0.000572001265) +
           t42_tmp * 5.7496807E-5;
    t220 = (dq[1] * 5.7496807E-5 - t85_tmp * 0.000218457134) +
           t42_tmp * 0.004431760472;
    t155_tmp = t190_tmp * t46;
    t164_tmp = (t28 + 1.0) * t46;
    t169 = t164_tmp * 2.077264E-6;
    t180_tmp = dq[2] * t117;
    t183 = t69 * t117;
    t213_tmp = dq[1] * (t85 + t110);
    t218 = (dq[1] * 0.000572001265 + t85_tmp * 0.000740309489) -
           t42_tmp * 0.000218457134;
    t223 = (-t42 + t58) + t25;
    t94 = t12 * t17 * (t8 - 1.0);
    t307 = q[2] * (t5 + -t12 * t18 * (t5 - t10));
    t234 = ((-(t190_tmp * 0.009539) + t28 * 0.296244) +
            -t17 * (t94 * 0.116695 - t307 * 0.006197)) +
           0.296244;
    t263 = ((((dq[1] * 2.077264E-6 + dq[2] * 2.077264E-6) - t35 * 7.117814E-6) +
             t40 * 2.4787446E-5) +
            t41 * 2.4787446E-5) +
           t52 * 7.117814E-6;
    t8 = t190_tmp * t223;
    t226 = (-(t42_tmp * 0.00805184) + dq[1] * 0.00307464) + t25 * 0.92;
    t18 = (t28 + 1.0) * t223;
    t5 = dq[1] * t234;
    t10 = t11 * t15 * t19_tmp;
    t12 = q[1] * (t4 + -t11 * t16 * (t4 - t9));
    t262 = ((((dq[1] * 0.001100428748 + dq[2] * 0.001100428748) +
              t35 * 2.55679E-7) +
             t40 * 2.077264E-6) +
            t41 * 2.077264E-6) -
           t52 * 2.55679E-7;
    t264_tmp = ((((dq[1] * 2.55679E-7 + t69) + t35 * 0.001088793059) -
                 t40 * 7.117814E-6) -
                t41 * 7.117814E-6) -
               t52 * 0.001088793059;
    t272 = t263 * t188_tmp;
    t209 = dq[1] * (t42 - t25);
    t236 = ((t190_tmp * 0.296244 + t28 * 0.009539) -
            t17 * (t94 * 0.006197 + t307 * 0.116695)) +
           0.009539;
    t258_tmp = dq[2] * (((t35 * 0.006197 + t40 * 0.116695) + t41 * 0.116695) -
                        t52 * 0.006197);
    t258 = t258_tmp * 0.135862;
    t269 = -(t117 * t264_tmp);
    t289 = ((((dq[2] * 0.116695 + t132) + t182) + t196) + t8) + t5;
    t290 = ((((-(dq[1] * 0.116695) + t132) + t182) + t196) + t8) + t5;
    t25 = dq[1] * t236;
    t295 =
        ((((t142 + t41 * 0.002644146244) + t182 * 0.135862) + t196 * 0.135862) +
         t8 * 0.135862) +
        t5 * 0.135862;
    t8 = ((-t45 + ddq[1] * 0.033451) + t23 * 0.07189799999999999) - t209;
    t273 = t190_tmp * t236 + (t28 + 1.0) * t234;
    t5 = ((((dq[2] * 0.006197 + t108) + t190) - t193) - t18) + t25;
    t296 = t6 * t295;
    t300 = t117 * t295;
    t94 = t42_tmp * t273;
    t283_tmp = t45_tmp * (((-(t45_tmp * 0.033349) + t27 * 0.008999) +
                           -t15 * (t10 * 0.003342 - t12 * 0.033451)) +
                          0.008999) -
               (t27 + 1.0) * (((t45_tmp * 0.008999 + t27 * 0.033349) -
                               t15 * (t10 * 0.033451 + t12 * 0.003342)) +
                              0.033349);
    t283 = dq[0] * 0.000102 + -dq[0] * t283_tmp;
    t307 = dq[0] * t283_tmp;
    t285 = dq[0] * 9.384E-5 + t307 * -0.92;
    t292 = ((((dq[1] * 0.006197 - t108) - t190) + t193) + t18) - t25;
    t25 = ((((t144 + t35 * 0.002644146244) + t190 * 0.135862) - t193 * 0.135862) -
           t18 * 0.135862) +
          t25 * 0.135862;
    t305 = t5 * t295;
    t299 = t6 * t25;
    t306_tmp = t190_tmp * t234 - (t28 + 1.0) * t236;
    t52 = (-dq[0] * q[1] * t9 * t15 * t306_tmp + t94) + t283;
    t304 = -(t289 * t25);
    t307 = ((dq[0] * 1.3857924E-5 + t307 * -0.135862) +
            t85_tmp * t306_tmp * -0.135862) +
           t94 * 0.135862;
    t108 = t117 * t307;
    t190 = t307 * t188_tmp;
    t35 = ddq[1] * t236;
    t9 = t161 * t177_tmp;
    t15 = t190_tmp * t8;
    t318_tmp = ((ddq[1] * 0.003342 - t71) - t24 * 0.063146) + t162;
    t318 = (((((((ddq[2] * 0.000841936814 + t155_tmp * 0.002644146244) +
                 t9 * 0.135862) -
                (t28 + 1.0) * t318_tmp * 0.135862) +
               t15 * 0.135862) +
              t35 * 0.135862) +
             dq[2] * t290 * 0.135862) -
            t296) +
           t190;
    t319_tmp = t190_tmp * t177_tmp;
    b_t319_tmp = ddq[1] * t234;
    t193 = t46 * t161;
    t17 = (t28 + 1.0) * t8;
    t132 = t190_tmp * t318_tmp;
    t182 = (((((((ddq[2] * 0.01585441609 + t319_tmp * -0.002644146244) +
                 t193 * 0.135862) +
                t132 * 0.135862) +
               b_t319_tmp * 0.135862) +
              t17 * 0.135862) +
             dq[2] * t292 * 0.135862) +
            t299) +
           t108;
    t196 = t190_tmp * t182;
    t41 = (t28 + 1.0) * t318;
    t69 = ((((((((((ddq[1] * 2.55679E-7 + ddq[2] * 2.55679E-7) +
                   t155_tmp * 0.001088793059) +
                  t319_tmp * 7.117814E-6) -
                 t164_tmp * 7.117814E-6) +
                b_t177_tmp * 0.001088793059) +
               t180_tmp * 0.001088793059) +
              b_t188_tmp * 7.117814E-6) -
             t6 * t263) +
            t117 * t262) -
           t5 * t307) +
          t25 * t52;
    t42 = ((((((ddq[1] * 0.00307464 - t71 * 0.92) - t24 * 0.058094319999999991) +
              t162 * 0.92) +
             dq[1] * t181) +
            t42_tmp * t285) +
           t196) -
          t41;
    t40 = ddq[0] * t283_tmp;
    t11 = t273 * t177_tmp;
    t16 = t11 * 0.135862;
    t4 = t25 * t188_tmp;
    t12 = t46 * t306_tmp;
    t10 = t12 * 0.135862;
    t18 = t42_tmp * t226;
    t19_tmp =
        ((((((-(ddq[0] * 1.3857924E-5) + t213_tmp * 0.135862) + t258) + t300) +
           t40 * 0.135862) +
          t16) +
         t4) +
        t10;
    t307 = ((((((((((-(ddq[1] * 2.077264E-6) - ddq[2] * 2.077264E-6) +
                    t155_tmp * 7.117814E-6) -
                   t164_tmp * 2.4787446E-5) +
                  t180_tmp * 7.117814E-6) -
                 t6 * t264_tmp) +
                t289 * t307) -
               t295 * t52) +
              b_t188_tmp * 2.4787446E-5) +
             b_t177_tmp * 7.117814E-6) +
            t262 * t188_tmp) +
           t319_tmp * 2.4787446E-5;
    t25 = t190_tmp * t318;
    t94 = t85_tmp * t181;
    t8 = dq[1] * t226;
    t5 = (t28 + 1.0) * t182;
    taulist[0] =
        (((((ddq[0] * 0.000379294663816248 - t300 * 0.000102) +
            (((((t213_tmp * -0.000107697924 - t258_tmp * 1.3857924E-5) +
                t283_tmp * (((((ddq[0] * -0.000107697924 + t258) + t300) +
                              t213_tmp * 1.055862) +
                             t40 * 1.055862) +
                            ((((t16 + t4) + t10) + t18) + t94))) -
               (t27 + 1.0) * t42 * 0.008752) +
              (t27 * 0.07189799999999999 + 0.07189799999999999) * t42) -
             (t27 + 1.0) *
                 (((((((ddq[1] * -5.7496807E-5 + t23 * 0.000218457134) +
                       t24 * 0.004431760472) -
                      t33 * 0.004431760472) +
                     t34 * 0.000218457134) +
                    (((((t196 * -0.019462 - dq[1] * t218) + (t28 + 1.0) * t69) +
                       (t99 + 0.019462) * t318) +
                      t223 * t285) -
                     t226 * t283)) +
                   t273 * t19_tmp) +
                  (t190_tmp * t307 + t85_tmp * t217)))) +
           (t40 * -0.000107697924 - t11 * 1.3857924E-5)) +
          ((t4 * -0.000102 - t12 * 1.3857924E-5) - t18 * 0.000102)) +
         (t45_tmp *
              (((((((ddq[1] * 0.03077492 + t23 * 0.06614616) - t45 * 0.92) -
                   t209 * 0.92) -
                  t8) +
                 t5) +
                t25) +
               t85_tmp * t285) *
              0.063146 +
          t45_tmp * ((((((((ddq[1] * 0.000572001265 + t23 * 0.000740309489) +
                           t24 * 0.000218457134) -
                          t33 * 0.000218457134) +
                         t34 * 0.000740309489) -
                        dq[1] * t220) +
                       (((-t174 * t285 + t181 * t283) + (t99 + 0.019462) * t182) +
                        t306_tmp * t19_tmp)) +
                      (-(t28 + 1.0) * t307 + t42_tmp * t217)) +
                     (t25 * 0.019462 + t190_tmp * t69)))) +
        (t94 * -0.000102 - 0.05074155792);
    taulist[1] =
        (((((ddq[1] * 0.0066258277698 + ddq[2] * 0.001100428748) +
            t23 * 0.00278465646316) +
           (((t24 * -0.00025164802444 + t33 * 5.7496807E-5) +
             t34 * 0.000572001265) -
            t45 * 0.03077492)) +
          (((((((((((t71 * -0.00307464 + t162 * 0.00307464) + t169) + t177) +
                  t183) +
                 t188) -
                t209 * 0.03077492) +
               t269) +
              t272) +
             t304) +
            t305) +
           t196 * 0.003342)) +
         (((((((((((t41 * -0.003342 - t8 * 0.033451) + t58 * t181) +
                  t5 * 0.033451) +
                 t85 * t285) +
                t110 * t285) +
               t174 * t226) -
              t181 * t223) +
             t234 * t182) +
            t236 * t318) -
           t42_tmp * t218) +
          t155_tmp * 2.55679E-7)) +
        ((t25 * 0.033451 - t319_tmp * 2.077264E-6) + t85_tmp * t220);
    taulist[2] =
        (((((((((((((ddq[1] * 0.001100428748 + ddq[2] * 0.0029557773160589071) +
                    t169) +
                   t177) +
                  t183) +
                 t188) +
                t269) +
               t272) -
              t296 * 0.006197) +
             (((((t299 * 0.116695 + t304) + t305) + t108 * 0.116695) +
               t190 * 0.006197) +
              b_t319_tmp * 0.01585441609)) +
            (t35 * 0.000841936814 + t193 * 0.01585441609)) +
           (((t17 * 0.01585441609 + t142 * t292) + t144 * t290) -
            (t28 + 1.0) * t318_tmp * 0.000841936814)) +
          (t9 * 0.000841936814 + t155_tmp * 1.6641453274068E-5)) +
         (t15 * 0.000841936814 + t132 * 0.01585441609)) +
        t319_tmp * -0.00031063590994357987;
}

// End of code generation (go1_RL_leg_inverse_dynamics_hip_zero.cpp)
